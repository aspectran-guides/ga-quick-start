<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE aspectran PUBLIC "-//ASPECTRAN//DTD Aspectran Configuration 2.0//EN"
		"http://aspectran.github.io/dtd/aspectran-2.dtd">

<aspectran>
	
	<description>
		Quick Start Guide를 위한 Aspectran Configuration입니다.
		가장 처음 불려지는 설정 파일로써, 공통 설정 구성 정보를 담고 있습니다.
	</description>

	<!-- 기본 설정 -->
	<settings>
		<!-- Transelt Name의 패턴을 정의합니다.  -->
		<setting name="transletNamePattern" value="/ga-quick-start/*"/>
	</settings>

	<!-- 다국어 처리를 위한 메시지 Bean을 정의합니다.  -->
	<bean id="messageSource" class="com.aspectran.core.context.message.ResourceBundleMessageSource">
		<properties>
			<item name="basename">locale.messages</item>
		</properties>
	</bean>

	<!-- 로케일을 결정하기 위해 세션을 이용합니다. -->
	<bean id="localeResolver" class="com.aspectran.core.context.locale.SessionLocaleResolver"/>

	<!-- 로케일을 변경하기 위한 인터셉터 Bean을 정의합니다. -->
	<bean id="localeChangeInterceptor" class="com.aspectran.core.context.locale.LocaleChangeInterceptor"/>

	<!-- JSP를 View로 사용하기 위해 JSP View Dispatcher를 정의합니다. -->
	<bean id="jspViewDispatcher" class="com.aspectran.web.activity.response.view.JspViewDispatcher">
		<properties>
			<item name="prefix" value="/WEB-INF/jsp/"/>
			<item name="suffix" value=".jsp"/>
		</properties>
	</bean>

	<bean id="simplestAdvice" class="hello.SimplestAdvice">
		<description>
			hellowWorld Method의 실행 전 후에 실행되는 Method를 가지고 있는 Advice Bean을 정의합니다.
		</description>
	</bean>

	<bean id="*" scan="hello.**.*Action">
		<description>
			모든 Action Bean을 찾아서 등록합니다.
		</description>
	</bean>

	<aspect id="defaultRequestRule">
		<description>
			모든 요청에 대하여 기본 설정을 적용합니다.
		</description>
		<joinpoint scope="request"/>
		<settings>
			<setting name="characterEncoding" value="utf-8"/>
			<setting name="localeResolver" value="localeResolver"/>
			<setting name="localeChangeInterceptor" value="localeChangeInterceptor"/>
		</settings>
	</aspect>

	<aspect id="defaultResponseRule">
		<description>
			모든 응답 처리에 대하여 기본 설정을 적용합니다.
		</description>
		<joinpoint scope="response"/>
		<settings>
			<setting name="characterEncoding" value="utf-8"/>
			<setting name="contentEncoding" value="gzip"/>
			<setting name="viewDispatcher" value="jspViewDispatcher"/>
		</settings>
	</aspect>

	<aspect id="simplestAspect">
		<description>
			"Hello World"만 출력하기에는 심심한 면이 없지 않아서,
			내부적으로 특정 Method를 실행하는 기능을 주입시켜 보겠습니다.
			요청 URI가 "/ga-quick-start/"로 시작하고,
			simplestAction Bean의 helloWorld Method를 실행하는 Translet이 발견되면,
			해당 Translet의 실행 전에는 simplestAdvice Bean의 welcome Method를 실행하고,
			해당 Translet의 실행 후에는 simplestAdvice Bean의 goodbye Method를 실행합니다.
		</description>
		<joinpoint scope="translet">
			<pointcut>
				target: {
					+: "/ga-quick-start/*@hello.SimplestAction^helloWorld"
				}
			</pointcut>
		</joinpoint>
		<advice bean="simplestAdvice">
			<before>
				<action method="welcome"/>
			</before>
			<after>
				<action method="goodbye"/>
			</after>
		</advice>
	</aspect>

	<import file="/WEB-INF/aspectran/config/quick-start-guide-ex1.xml"/>
	<import file="/WEB-INF/aspectran/config/quick-start-guide-ex2.xml"/>
	<import file="/WEB-INF/aspectran/config/quick-start-guide-ex3.xml"/>

</aspectran>
