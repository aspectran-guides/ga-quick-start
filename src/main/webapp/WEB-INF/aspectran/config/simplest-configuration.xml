<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE aspectran PUBLIC "-//ASPECTRAN//DTD Aspectran Configuration 2.0//EN"
		"http://aspectran.github.io/dtd/aspectran-2.0.dtd">

<aspectran>
	
	<description>
		Quick Start Guide를 위한 Aspectran Configuration입니다.
	</description>

	<!-- 기본 설정 -->
	<settings>
		<!-- Transelt Name의 패턴을 정의합니다.  -->
		<setting name="transletNamePattern" value="/ga-quick-start/*"/>
	</settings>

	<bean id="messageSource" class="com.aspectran.core.context.message.ResourceBundleMessageSource">
		<property>
			<item name="basename">locale.Messages</item>
		</property>
	</bean>

	<bean id="localeResolver" class="com.aspectran.core.context.locale.SessionLocaleResolver"/>

	<bean id="localeChangeInterceptor" class="com.aspectran.core.context.locale.LocaleChangeInterceptor"/>

	<bean id="jspViewDispatcher" class="com.aspectran.web.activity.response.view.JspViewDispatcher">
		<property>
			<item name="prefix" value="/WEB-INF/jsp/"/>
			<item name="suffix" value=".jsp"/>
		</property>
	</bean>

	<aspect id="defaultRequestRule">
		<description>
			모든 요청에 대하여 기본 설정을 적용합니다.
		</description>
		<joinpoint scope="request"/>
		<settings>
			<setting name="characterEncoding" value="utf-8"/>
			<setting name="localeResolver" value="localeResolver"/>
			<setting name="localeChangeInterceptor" value="localeChangeInterceptor"/>
		</settings>
	</aspect>

	<aspect id="defaultResponseRule1">
		<description>
			모든 응답 처리에 대하여 기본 설정을 적용합니다.
			".jsp/"로 끝나는 요청 URI에 대해서는 컨텐츠 압축을 하지 않도록 설정합니다.
		</description>
		<joinpoint scope="response">
			<pointcut>
				target: {
					+: "/**/*"
					-: "/**/*.jsp"
				}
			</pointcut>
		</joinpoint>
		<settings>
			<setting name="characterEncoding" value="utf-8"/>
			<setting name="contentEncoding" value="gzip"/>
		</settings>
	</aspect>

	<aspect id="defaultResponseRule2">
		<description>
			".jsp"로 끝나는 요청 URI에 대하여 기본 설정 및
			JSP View Dispatcher를 지정합니다.
		</description>
		<joinpoint scope="response">
			<pointcut>
				target: {
					+: "/**/*.jsp"
				}
			</pointcut>
		</joinpoint>
		<settings>
			<setting name="characterEncoding" value="utf-8"/>
			<setting name="viewDispatcher" value="jspViewDispatcher"/>
		</settings>
	</aspect>

	<bean class="hello.SimplestAction">
		<description>
			Action Method를 가지고 있는 singleton 스코프를 가지는 Bean을 정의합니다.
		</description>
	</bean>

	<bean id="simplestAdvice" class="hello.SimplestAdvice">
		<description>
			Action Method 실행 전 후에 주입할 Advice Action Method를 가지고 있는
			singleton 스코프를 가지는 Bean을 정의합니다.
		</description>
	</bean>

	<aspect id="simplestAspect">
		<description>
			요청 URI가 "/ga-quick-start/"로 시작하고,
			simplestAction Bean의 helloWorld 메쏘드를 실행하는 Translet이 발견되면,
			해당 Translet의 실행 전에는 simplestAdvice Bean의 welcome 메쏘드를 실행하고,
			해당 Translet의 실행 후에는 simplestAdvice Bean의 goodbye 메쏘드를 실행합니다.
		</description>
		<joinpoint scope="translet">
			<pointcut>
				target: {
					+: "/ga-quick-start/*@class:hello.SimplestAction^helloWorld"
				}
			</pointcut>
		</joinpoint>
		<advice bean="simplestAdvice">
			<before>
				<action method="welcome"/>
			</before>
			<after>
				<action method="goodbye"/>
			</after>
		</advice>
	</aspect>

	<translet name="helloWorld">
		<description>
			요청 URI가 "/ga-quick-start/helloWorld"이면,
			simplestAction 빈에서 helloWorld 메쏘드를 실행합니다.
			helloWorld 메쏘드가 반환하는 "Hello, World." 문자열을 텍스트 형식의 컨텐츠로 응답합니다.
		</description>
		<transform type="transform/text" contentType="text/plain">
			<action id="hello" bean="class:hello.SimplestAction" method="helloWorld"/>
		</transform>
	</translet>

	<translet name="${targetName}.jsp" method="ALL">
		<description>
			"/ga-quick-start/jsp/"로 시작하는 요청 URI에서 Dispatch Target Name을 분석해서
			해당하는 JSP 파일로 포워딩을 합니다.
		</description>
		<dispatch name="${targetName}" contentType="text/html"/>
	</translet>

</aspectran>
